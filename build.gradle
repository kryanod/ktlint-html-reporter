buildscript {
    ext.kotlinVersion = '1.3.30'
    ext.ktlintVersion = '0.32.0'
    ext.junitVersion = '4.12'
    repositories {
        mavenCentral()
    }
    dependencies {
        // noinspection all
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
    id "com.jfrog.artifactory" version "4.7.2"
    id "com.jfrog.bintray" version "1.8.0"
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven-publish'

group 'me.cassiano'
version '0.2.0'
sourceCompatibility = 1.6

final ciBuild = System.hasProperty('ci')
final localProps = new Properties()
localProps.load(file('local.properties').newDataInputStream())

repositories {
    mavenCentral()
}

dependencies {
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compileOnly "com.pinterest.ktlint:ktlint-core:$ktlintVersion"
    testCompile "com.pinterest.ktlint:ktlint-core:$ktlintVersion"
    testCompile "junit:junit:$junitVersion"
}

bintray {

    if (ciBuild) {
        user = System.getenv('bintrayUser')
        key = System.getenv('bintrayKey')
    } else {
        user = localProps.getProperty('bintrayUser')
        key = localProps.getProperty('bintrayKey')
    }

    publications = ['mavenJava']

    pkg {
        repo = 'maven'
        name = 'ktlint-html-reporter'

        version {
            name = project.version
            released = new Date()
            vcsTag = "v${project.version}"
        }
    }
}

task sourcesJar(type: Jar, dependsOn: project.classes) {
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: project.javadoc) {
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId project.bintray.pkg.name
            from components.java

            artifact sourcesJar {
                classifier = 'sources'
            }
            artifact javadocJar {
                classifier = 'javadoc'
            }
        }
    }
}
